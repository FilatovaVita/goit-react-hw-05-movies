{"version":3,"file":"static/js/218.9281f9e4.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.js","components/MovieTrailer/MovieTrailer.js","pages/MovieDetails/MovieDetails.js","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.section`\n  display: flex;\n  padding: 10px;\n  margin-top: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  width: 100%;\n  justify-content: center;\n`;\n\nexport const FilmInfoContainer = styled.div`\n  margin-right: 15px;\n  margin-left: 15px;\n  max-width: 100%;\n  max-height: 50%;\n`;\nexport const FilmMore = styled.section`\n  padding: 10px;\n  margin: 15px auto;\n`;\nexport const Paragraph = styled.div`\n  width: 100%;\n  height: auto;\n  margin-bottom: 15px;\n  font-size: 16px;\n  color: orange;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 15px;\n`;\nexport const GenresList = styled.ul`\n  display: flex;\n  font-size: 16px;\n  color: orange;\n  list-style: none;\n`;\n\nexport const MainTittle = styled.p`\n  font-weight: 700;\n  font-size: 22px;\n`;\n\nexport const DetailsTittles = styled.p`\n  font-weight: 500;\n`;\nexport const GenresItem = styled.li`\n  font-weight: 600;\n  margin-right: 7px;\n`;\n\nexport const LinkReturn = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  text-decoration: none;\n  padding: 12px 41px;\n  color: orange;\n  font-weight: 500;\n  width: 100px;\n  background-color: #3d3d3d;\n  border-radius: 40px;\n  transition: all 250ms ease-in-out;\n\n  :hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px white, inset -1px -1px 2px orange;\n  }\n`;\n\nexport const LinkCast = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  padding: 12px 20px;\n  color: orange;\n  font-weight: 500;\n  width: 100px;\n  background-color: #3d3d3d;\n  border-radius: 40px;\n  transition: all 250ms ease-in-out;\n\n  :hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px white, inset -1px -1px 2px orange;\n  }\n\n  &.active {\n    color: white;\n    background-color: orange;\n  }\n`;\nexport const LinkRewiews = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  padding: 12px 20px;\n  color: orange;\n  font-weight: 500;\n  width: 100px;\n  background-color: #3D3D3D;;\n  border-radius: 40px;\n  transition: all 250ms ease-in-out;\n\n  &.active {\n    color: white;\n    background-color: orange;\n  }\n\n  :hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px white,\n      inset -1px -1px 2px orange;\n`;\nexport const Cover = styled.div`\n  position: relative;\n  width: 100%;\n  height: auto;\n  border-radius: 15px;\n  object-fit: cover;\n`;\n","import styled from '@emotion/styled';\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  flex-shrink: 0;\n  flex-grow: 0;\n  min-height: 100%;\n  min-width: 100%;\n  margin: auto;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nexport const ModalField = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nexport const BtnTrailer = styled.button`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: transparent;\n  border-color: transparent;\n  transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n`;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Iframe from 'react-iframe';\nimport { ModalOverlay } from './Modal.styled';\n\nexport const Modal = ({ src, onClose }) => {\n  useEffect(() => {\n    const closeModalOnEsc = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    document.addEventListener('keydown', closeModalOnEsc);\n    return document.removeEventListener('keydown', closeModalOnEsc);\n  }, [onClose]);\n\n  const onBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <ModalOverlay onClick={onBackdropClick}>\n      <Iframe\n        url={`https://www.youtube.com/embed/${src}; frameborder=\"0\"; allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen`}\n        width=\"1040px\"\n        height=\"640px\"\n      />\n    </ModalOverlay>\n  );\n};\nModal.propTypes = {\n  src: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieTrailer } from '../../utils/api';\nimport { Modal } from '../Modal/Modal';\nimport { Loader } from '../Loader/Loader';\nimport toast from 'react-hot-toast';\nimport noMovie from '../../images/noMovie.jpg';\nimport { BtnTrailer } from '../Modal/Modal.styled';\nimport { FaYoutube } from 'react-icons/fa';\n\nexport default function MovieTrailer() {\n  const [trailers, setTrailers] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getTrailer = async () => {\n      setLoading(true);\n      try {\n        const response = await getMovieTrailer(movieId);\n        setTrailers(response);\n      } catch (error) {\n        setError(error);\n        return toast.error('Something went wrong..reload the page!');\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTrailer();\n  }, [movieId]);\n  let key =\n    trailers\n      .filter(trailer => trailer.name === 'Official Trailer')\n      .map(trailer => trailer.key) + '';\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      <BtnTrailer onClick={() => setIsModalOpen(true)}>\n        <FaYoutube style={{ width: 180, height: 80, color: 'red' }} />\n      </BtnTrailer>\n      {isModalOpen && <Modal onClose={closeModal} src={key} />}\n      {!movieId && error && <img src={noMovie} alt=\"\" />}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from '../../utils/api';\n\nimport noPoster from '../../images/noPoster.jpg';\nimport noMovie from '../../images/noMovie.jpg';\nimport {\n  LinkReturn,\n  Paragraph,\n  LinkCast,\n  LinkRewiews,\n  FilmInfoContainer,\n  Section,\n  GenresItem,\n  GenresList,\n  FilmMore,\n  MainTittle,\n  DetailsTittles,\n  MoviePoster,\n  Cover,\n} from './MovieDetails.styled';\nimport { Loader } from '../../components/Loader/Loader';\nimport toast from 'react-hot-toast';\nimport MovieTrailer from '../../components/MovieTrailer/MovieTrailer';\n\nexport default function MovieDetailsPage() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  let { movieId } = useParams();\n\n  const location = useLocation();\n  const locationFrom = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    const oneMovie = async () => {\n      setLoading(true);\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n        return toast.error('Something went wrong..reload the page!');\n      } finally {\n        setLoading(false);\n      }\n    };\n    oneMovie();\n  }, [movieId]);\n\n  const releaseData = new Date(movies.release_date);\n  const { release_date, title, vote_average, overview, genres, poster_path } =\n    movies;\n\n  return (\n    <>\n      <LinkReturn to={locationFrom}> ◀ BACK </LinkReturn>\n      {loading && <Loader />}\n      {error && <img src={noMovie} alt=\"\" />}\n      {!error && !loading && (\n        <Section>\n          <Cover>\n            {' '}\n            <MovieTrailer />\n            {poster_path ? (\n              <MoviePoster\n                src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n                alt={title}\n              />\n            ) : (\n              <MoviePoster src={noPoster} alt={title} />\n            )}\n          </Cover>\n          <FilmInfoContainer>\n            <MainTittle>\n              {title} ({releaseData.getFullYear(release_date)})\n            </MainTittle>\n            <DetailsTittles>User score: {vote_average * 10}%</DetailsTittles>\n            <DetailsTittles>Genres:</DetailsTittles>\n            <GenresList>\n              {genres &&\n                genres.map(({ name }) => (\n                  <GenresItem key={name}>🎥 {name} |</GenresItem>\n                ))}\n            </GenresList>\n            <DetailsTittles>Overview </DetailsTittles>\n            {overview ? (\n              <Paragraph>{overview}</Paragraph>\n            ) : (\n              <Paragraph>No overview</Paragraph>\n            )}\n          </FilmInfoContainer>\n        </Section>\n      )}\n      {!error && (\n        <Section>\n          <LinkCast\n            to={`/movies/${movieId}/cast`}\n            state={{ from: locationFrom }}\n          >\n            Cast\n          </LinkCast>\n          <LinkRewiews\n            to={`/movies/${movieId}/reviews`}\n            state={{ from: locationFrom }}\n          >\n            Reviews\n          </LinkRewiews>\n        </Section>\n      )}\n      <FilmMore>\n        <Outlet />\n      </FilmMore>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = 'c38fbf9ef4d95318ebd4d81243883dff';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      include_adult: false,\n     query\n    },\n  });\n\n  return data.results;\n};\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getMovieTrailer = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/videos`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\n"],"names":["Section","styled","FilmInfoContainer","FilmMore","Paragraph","MoviePoster","GenresList","MainTittle","DetailsTittles","GenresItem","LinkReturn","NavLink","LinkCast","LinkRewiews","Cover","ModalOverlay","BtnTrailer","Modal","src","onClose","useEffect","closeModalOnEsc","e","code","document","addEventListener","removeEventListener","onClick","target","currentTarget","url","width","height","MovieTrailer","useState","trailers","setTrailers","isModalOpen","setIsModalOpen","loading","setLoading","error","setError","movieId","useParams","getTrailer","getMovieTrailer","response","toast","key","filter","trailer","name","map","Loader","style","color","noMovie","alt","MovieDetailsPage","movies","setMovies","location","useLocation","locationFrom","state","from","oneMovie","getMovieDetails","data","releaseData","Date","release_date","title","vote_average","overview","genres","poster_path","to","noPoster","getFullYear","KEY","axios","getTrendingMovies","params","api_key","results","getSearchMovies","query","include_adult","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}