{"version":3,"file":"static/js/682.da688849.chunk.js","mappings":"8LACaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,0BACVC,aAAc,CAACC,SAAU,QACvBC,IAAK,MACLC,KAAM,MACNC,UAAW,yBACbC,aAAa,0BACbC,WAAa,UACbC,MAAQ,UAGb,C,iKChBYC,E,QAAqBC,GAAAA,GAAH,mE,mBCOhB,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,2FAExBJ,GAAW,GAFa,mBAICK,EAAAA,EAAAA,IAAgBX,GAJjB,OAIhBY,EAJgB,OAKtBR,EAAWQ,GALW,uDAOtBJ,EAAS,EAAD,IAPc,kBAQfK,EAAAA,GAAAA,MAAY,2CARG,yBAUtBP,GAAW,GAVW,4EAAH,qDAavBI,GACD,GAAE,CAACV,KAGF,gCACGK,IAAW,SAACrB,EAAA,EAAD,KACVqB,IAAYF,EAAQW,SAAU,yCAChC,SAACjB,EAAD,WACIU,GACAJ,EAAQY,KAAI,SAAAC,GAAM,OAChB,2BACE,0BAAKA,EAAOC,OAAZ,SACA,uBAAID,EAAOE,YAFJF,EAAOG,GADA,QAS3B,C,mMC5CKC,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAU,sBAAuB,CACtDE,OAAQ,CACNC,QAASJ,KAHkB,uBACvBK,EADuB,EACvBA,KADuB,kBAOxBA,EAAKC,SAPmB,2CAAH,qDAUjBC,EAAe,mCAAG,WAAMC,GAAN,0FACNP,EAAAA,EAAAA,GAAM,gBAAiB,CAC5CE,OAAQ,CACNC,QAASJ,EACTS,eAAe,EAChBD,MAAAA,KAL0B,uBACrBH,EADqB,EACrBA,KADqB,kBAStBA,EAAKC,SATiB,2CAAH,sDAWfI,EAAe,mCAAG,WAAM9B,GAAN,0FACNqB,EAAAA,EAAAA,GAAM,UAAD,OAAWrB,GAAW,CAChDuB,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,sDAUfM,EAAY,mCAAG,WAAM/B,GAAN,0FACHqB,EAAAA,EAAAA,GAAM,UAAD,OAAWrB,EAAX,YAA8B,CACxDuB,OAAQ,CACNC,QAASJ,KAHa,uBAClBK,EADkB,EAClBA,KADkB,kBAOnBA,EAAKO,MAPc,2CAAH,sDAUZrB,EAAe,mCAAG,WAAMX,GAAN,0FACNqB,EAAAA,EAAAA,GAAM,UAAD,OAAWrB,EAAX,YAA8B,CACxDuB,OAAQ,CACNC,QAASJ,KAHgB,uBACrBK,EADqB,EACrBA,KADqB,kBAOtBA,EAAKC,SAPiB,2CAAH,qD","sources":["components/Loader/Loader.js","components/MovieReviews/MovieReviews.styled.jsx","components/MovieReviews/MovieReviews.js","utils/api.js"],"sourcesContent":["import {MagnifyingGlass} from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <MagnifyingGlass\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"MagnifyingGlass-loading\"\n      wrapperStyle={{position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',}}\n      wrapperClass=\"MagnifyingGlass-wrapper\"\n      glassColor = '#c0efff'\n      color = 'orange'\n    />\n  );\n};\n\n","import styled from 'styled-components'\nexport const MovieReviewsStyled = styled.ul`\n\n  font-size: 14px;\n  list-style: none;\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from '../../utils/api';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader/Loader';\nimport { MovieReviewsStyled } from './MovieReviews.styled';\nimport toast from 'react-hot-toast';\n\nexport default function MovieReviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n\n      setLoading(true);\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response);\n      } catch (error) {\n        setError(error);\n        return toast.error('Something went wrong..reload the page!');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {!loading && !reviews.length && <h1>NO REVIEWS </h1>}\n      <MovieReviewsStyled>\n        {!error &&\n          reviews.map(review => (\n            <li key={review.id}>\n              <h2>{review.author} :</h2>\n              <p>{review.content}</p>\n            </li>\n          ))}\n      </MovieReviewsStyled>\n    </>\n  );\n}\nMovieReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import axios from 'axios';\n\nconst KEY = 'c38fbf9ef4d95318ebd4d81243883dff';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      include_adult: false,\n     query\n    },\n  });\n\n  return data.results;\n};\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\n\n\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClass","glassColor","color","MovieReviewsStyled","styled","MovieReviews","movieId","useParams","useState","reviews","setReviews","loading","setLoading","error","setError","useEffect","fetchMovieReviews","getMovieReviews","response","toast","length","map","review","author","content","id","KEY","axios","getTrendingMovies","params","api_key","data","results","getSearchMovies","query","include_adult","getMovieDetails","getMovieCast","cast"],"sourceRoot":""}