{"version":3,"file":"static/js/985.be6ba2ad.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","pages/MoviePage/MoviePage.styled.jsx","pages/MoviePage/MoviePage.js","utils/api.js"],"sourcesContent":["import {MagnifyingGlass} from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <MagnifyingGlass\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"MagnifyingGlass-loading\"\n      wrapperStyle={{position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',}}\n      wrapperClass=\"MagnifyingGlass-wrapper\"\n      glassColor = '#c0efff'\n      color = 'orange'\n    />\n  );\n};\n\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.section`\n  display: flex;\n  padding: 10px;\n  margin-top: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  width: 100%;\n  justify-content: center;\n`;\n\nexport const FilmInfoContainer = styled.div`\n  margin-right: 15px;\n  margin-left: 15px;\n  max-width: 100%;\n  max-height: 50%;\n`;\nexport const FilmMore = styled.section`\n  padding: 10px;\n  margin: 15px auto;\n`;\nexport const Paragraph = styled.div`\n  width: 100%;\n  height: auto;\n  margin-bottom: 15px;\n  font-size: 16px;\n  color: orange;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 500px;\n  height: auto;\n  border-radius: 15px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n\n  }`\nexport const GenresList = styled.ul`\n  display: flex;\n  font-size: 16px;\n  color: orange;\n  list-style: none;\n`;\n\nexport const MainTittle = styled.p`\n  font-weight: 700;\nfont-size: 22px;`\n\nexport const DetailsTittles = styled.p`\n  font-weight: 500;`\nexport const GenresItem = styled.li`\n  font-weight: 600;\n  margin-right: 7px;\n`;\n\nexport const LinkReturn = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  text-decoration: none;\n  padding: 12px 41px;\n  color: orange;\n  font-weight: 500;\n  width: 100px;\n  background-color: #3D3D3D;;\n  border-radius: 40px;\n  transition: all 250ms ease-in-out;\n  :hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px white,\n      inset -1px -1px 2px orange;\n  }\n`;\n\nexport const LinkCast = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  padding: 12px 20px;\n  color: orange;\n  font-weight: 500;\n  width: 100px;\n  background-color: #3D3D3D;;\n  border-radius: 40px;\n  transition: all 250ms ease-in-out;\n  :hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px white,\n      inset -1px -1px 2px orange;\n  }\n  &.active {\n    color: white;\n    background-color: orange;\n  }\n`;\nexport const LinkRewiews = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  padding: 12px 20px;\n  color: orange;\n  font-weight: 500;\n  width: 100px;\n  background-color: #3D3D3D;;\n  border-radius: 40px;\n  transition: all 250ms ease-in-out;\n  &.active {\n    color: white;\n    background-color: orange;\n  }\n   :hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px white,\n      inset -1px -1px 2px orange;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from '../../utils/api';\nimport noPoster from '../../images/noPoster.jpg';\nimport noMovie from '../../images/noMovie.jpg';\nimport {\n  LinkReturn,\n  Paragraph,\n  LinkCast,\n  LinkRewiews,\n  FilmInfoContainer,\n  Section,\n  GenresItem,\n  GenresList,\n  FilmMore,\n  MainTittle,\n  DetailsTittles,\n  MoviePoster,\n} from './MoviePage.styled';\nimport { Loader } from '../../components/Loader/Loader';\nimport toast from 'react-hot-toast';\n\nexport default function MovieDetailsPage() {\n  const [movies, setMovies] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  let { movieId } = useParams();\n\n  const location = useLocation();\n  const locationFrom = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    const oneMovie = async () => {\n      setLoading(true);\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n        return toast.error('Something went wrong..reload the page!');\n      } finally {\n        setLoading(false);\n      }\n    };\n    oneMovie();\n  }, [movieId]);\n\n  const releaseData = new Date(movies.release_date);\n  const { release_date, title, vote_average, overview, genres, poster_path } =\n    movies;\n\n  return (\n    <>\n      <LinkReturn to={locationFrom}> â—€ BACK </LinkReturn>\n      {loading && <Loader />}\n      {error && <img src={noMovie} alt=\"\" />}\n      {!error && (\n        <Section>\n          {poster_path ? (\n            <MoviePoster\n              src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n              alt={title}\n            />\n          ) : (\n            <MoviePoster src={noPoster} alt={title} />\n          )}\n          <FilmInfoContainer>\n            <MainTittle>\n              {title} ({releaseData.getFullYear(release_date)})\n            </MainTittle>\n            <DetailsTittles>User score: {vote_average * 10}%</DetailsTittles>\n            <DetailsTittles>Genres:</DetailsTittles>\n            <GenresList>\n              {genres &&\n                genres.map(({ name }) => (\n                  <GenresItem key={name}>ðŸŽ¥ {name} |</GenresItem>\n                ))}\n            </GenresList>\n            <DetailsTittles>Overview </DetailsTittles>\n            {overview ? (\n              <Paragraph>{overview}</Paragraph>\n            ) : (\n              <Paragraph>No overview</Paragraph>\n            )}\n          </FilmInfoContainer>\n        </Section>\n      )}\n      {!error && (\n        <Section>\n          <LinkCast\n            to={`/movies/${movieId}/cast`}\n            state={{ from: locationFrom }}\n          >\n            Cast\n          </LinkCast>\n          <LinkRewiews\n            to={`/movies/${movieId}/reviews`}\n            state={{ from: locationFrom }}\n          >\n            Reviews\n          </LinkRewiews>\n        </Section>\n      )}\n      <FilmMore>\n        <Outlet />\n      </FilmMore>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = 'c38fbf9ef4d95318ebd4d81243883dff';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      include_adult: false,\n     query\n    },\n  });\n\n  return data.results;\n};\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\n\n\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClass","glassColor","color","Section","styled","FilmInfoContainer","FilmMore","Paragraph","MoviePoster","GenresList","MainTittle","DetailsTittles","GenresItem","LinkReturn","NavLink","LinkCast","LinkRewiews","MovieDetailsPage","useState","movies","setMovies","loading","setLoading","error","setError","movieId","useParams","location","useLocation","locationFrom","state","from","useEffect","oneMovie","getMovieDetails","data","toast","releaseData","Date","release_date","title","vote_average","overview","genres","poster_path","to","src","noMovie","alt","noPoster","getFullYear","map","name","KEY","axios","getTrendingMovies","params","api_key","results","getSearchMovies","query","include_adult","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}