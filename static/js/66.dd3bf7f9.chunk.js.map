{"version":3,"file":"static/js/66.dd3bf7f9.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.js","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.js","pages/SearchPage/SearchPage.js","utils/api.js"],"sourcesContent":["import {MagnifyingGlass} from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <MagnifyingGlass\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"MagnifyingGlass-loading\"\n      wrapperStyle={{position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',}}\n      wrapperClass=\"MagnifyingGlass-wrapper\"\n      glassColor = '#c0efff'\n      color = 'orange'\n    />\n  );\n};\n\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Gallery = styled.ul`\n   display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    gap: 16px;\n    margin: 0 auto;\n    padding: 0;\n    list-style: none;`\n\n\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;\n\nexport const MovieListItem = styled.li`\n  cursor: pointer;\n  background-color: whitesmoke;\n  overflow: hidden;\n  border-radius: 15px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n  0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 15px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n\n  }\n`;\n\nexport const TitleRating = styled.div`\n  margin: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n\n\n`;\n\nexport const Rating = styled.p`\n  font-size: 18px;\n  padding: 4px 8px;\n  border-radius: 5px;\n  border: 1px solid black;\n  display: inline-block;\n  text-align: center;\n  background-color: ${({ rating }) => {\n  if (rating > 7) {\n    return 'forestgreen';\n  }\n  if (rating >= 4 && rating <= 7) {\n    return 'goldenrod';\n  }\n  if (rating > 0 && rating < 4) {\n    return 'red';\n\n  }\n}};\n\ncolor: ${({ rating }) => (rating >= 4 && rating <= 7 )};\n`;\n","import { useLocation } from 'react-router-dom';\nimport noPoster from '../../images/noPoster.jpg';\nimport {MovieLink, Rating, TitleRating, MovieListItem,\nPoster, Gallery} from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\n\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Gallery>\n      {movies.map(({ id, title, poster_path, vote_average }) => (\n        <MovieListItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            {poster_path ? (<Poster\n              src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n              alt={title}\n            />):(<Poster src={noPoster} alt={title} />\n            )}\n            <TitleRating>\n              <b>{title}</b>\n              {vote_average ? (\n                <Rating rating={vote_average.toFixed()}>\n                 USER SCORE: {(vote_average * 10).toFixed(2)}%\n                </Rating>\n              ) : (\n                <Rating rating={vote_average.toFixed()}>\n                  <p>NO USER SCORE</p>\n                </Rating>\n              )}\n            </TitleRating>\n          </MovieLink>\n        </MovieListItem>\n      ))}\n    </Gallery>\n  );\n};\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: whitesmoke;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  background-color: whitesmoke;\n  padding-left: 10px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n","import { FcSearch } from 'react-icons/fc';\nimport PropTypes from 'prop-types';\nimport { SearchWrapper, SearchForm, SearchFormBtn, SearchFormInput } from './Searchbar.styled';\n\n\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const formatSearchQuery = event => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n  };\n  const onSearchQuerySubmit = event => {\n    event.preventDefault();\n    if (!searchQuery.trim()) {\n      return toast('Please enter search name!', {\n        icon: '😕',\n      });\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('');\n\n  };\n\n  return (\n    <SearchWrapper>\n      <SearchForm onSubmit={onSearchQuerySubmit}>\n        <SearchFormInput\n          type='text'\n          name='search'\n          autoComplete='off'\n          autoFocus\n          placeholder='Search movie'\n          value={searchQuery}\n          onChange={formatSearchQuery}\n        />\n        <SearchFormBtn type='submit'>\n          <FcSearch style={{ width: 30, height: 30 }} />\n        </SearchFormBtn>\n      </SearchForm>\n    </SearchWrapper>\n  );\n};\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from '../../utils/api';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Searchbar } from '../../components/Searchbar/Searchbar';\nimport { Loader } from '../../components/Loader/Loader';\nimport { MovieList } from '../../components/MovieList/MovieList';\n\nexport default function SearchPage() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('searchQuery') ?? '';\n\n  useEffect(() => {\n    if (!query) return;\n\n    const findMovies = async () => {\n      setLoading(true);\n\n      try {\n        const films = await getSearchMovies(query);\n\n        if (!films.length) {\n          return toast.error('Oooppss! Movies not found...', { icon: '❌' });\n        }\n        setMovies(films);\n      } catch (error) {\n        return toast.error('Something wrong! Please reload the page!');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    findMovies();\n  }, [query, searchQuery]);\n\n  const searchQueryFormSubmit = searchQuery => {\n    setSearchParams({ searchQuery });\n    setSearchQuery(searchQuery);\n    setMovies([]);\n  };\n\n  return (\n    <>\n      <div>\n        <Toaster />\n        <Searchbar onSubmit={searchQueryFormSubmit}></Searchbar>\n        {loading && <Loader />}\n        {movies && <MovieList movies={movies} />}\n      </div>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = 'c38fbf9ef4d95318ebd4d81243883dff';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      include_adult: false,\n     query\n    },\n  });\n\n  return data.results;\n};\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return data.results;\n};\n\n\n\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","position","top","left","transform","wrapperClass","glassColor","color","Gallery","styled","MovieLink","Link","MovieListItem","Poster","TitleRating","Rating","rating","MovieList","movies","location","useLocation","map","id","title","poster_path","vote_average","to","state","from","src","alt","noPoster","toFixed","SearchForm","SearchFormBtn","SearchFormInput","SearchWrapper","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","trim","toast","icon","type","name","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","style","SearchPage","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","query","get","useEffect","findMovies","getSearchMovies","films","length","KEY","axios","getTrendingMovies","params","api_key","data","results","include_adult","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}